worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # Define a rate limit zone (limit to 5 requests per second per IP)
    limit_req_zone $binary_remote_addr zone=ratelimit_zone:10m rate=5r/s;

    # Define a cache zone
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_api_cache:10m max_size=100m inactive=60m use_temp_path=off;

    server {
        listen 80;

        location / {
            # Apply rate limiting
            limit_req zone=ratelimit_zone burst=20 nodelay;

            proxy_pass http://app:8000;

            # Enable caching
            proxy_cache my_api_cache;
            proxy_cache_valid 200 10m; # Cache responses with 200 status for 10 minutes
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;

            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Prefix /api/;

            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;
        }

        # Handle rate-limit exceeded
        error_page 503 /rate-limit-exceeded.html;
        location = /rate-limit-exceeded.html {
            internal;
            default_type text/html;
            return 503 '<html><body><h1>Rate Limit Exceeded</h1></body></html>';
        }
    }
}
